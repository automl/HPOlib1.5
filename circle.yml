machine:

  environment:
    # The github organization or username of the repository which hosts the
    # project and documentation.
    USERNAME: "automl"

    # The repository where the documentation will be hosted
    DOC_REPO: "HPOlib2"

    # The base URL for the Github page where the documentation will be hosted
    DOC_URL: ""

    # The email is to be used for commits in the Github Page
    EMAIL: "feurerm@informatik.uni-freiburg.de"

    PATH: "$HOME/miniconda/bin:$PATH"

dependencies:

  # Various dependencies
  pre:
    # Get rid of existing virtualenvs on circle ci as they conflict with conda.
    # Trick found here:
    # https://discuss.circleci.com/t/disable-autodetection-of-project-or-application-of-python-venv/235/10
    - cd && rm -rf ~/.pyenv && rm -rf ~/virtualenvs
    # from scikit-learn contrib
    - sudo -E apt-get -yq remove texlive-binaries --purge
    - sudo apt-get update
    # Install a conda environment
    - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
    - bash miniconda.sh -b -p $HOME/miniconda
    - export PATH="$HOME/miniconda/bin:$PATH"
    - echo $PATH
    - echo `which conda`
    - if [[ `which conda` ]]; then echo 'Conda installation successful'; else exit 1; fi
    - conda update --yes conda
    - conda create -n testenv --yes python=3.5 pip wheel nose gxx_linux-64 gcc_linux-64 swig
    - source activate testenv
    # upgrade pip and wheel to allow for fast installation
    - pip install wheel pip --upgrade
    # install numpy first as it is a compile time dependency for other packages
    - pip install numpy
    # install documentation building dependencies
    - pip install matplotlib nose coverage sphinx==1.5.5 sphinx_bootstrap_theme cython numpydoc
    # Installing required packages for `make -C doc check command` to work.
    - sudo -E apt-get -yq update
    - sudo -E apt-get -yq --no-install-suggests --no-install-recommends --force-yes install dvipng texlive-latex-base texlive-latex-extra
    # finally install the requirements of the package to allow autodoc
    - cat requirements.txt | grep -v '#' | xargs -n 1 -L 1 pip install

  # The --user is needed to let sphinx see the source and the binaries
  # The pipefail is requested to propagate exit code
  override:
    - python setup.py clean
    - python setup.py develop
    - set -o pipefail && cd doc && make html 2>&1 | tee ~/log.txt
    - pwd
    - ls
    - ls doc
test:
  # Grep error on the documentation
  override:
    - cat ~/log.txt && if grep -q "Traceback (most recent call last):" ~/log.txt; then false; else true; fi
deployment:
  master:
    branch: master
    commands:
      - bash ci_scripts/push_doc.sh 'stable'
  development:
    branch: development
    commands:
      - bash ci_scripts/push_doc.sh 'dev'
  circle-ci:
    branch: circle-ci
    commands:
      - bash ci_scripts/push_doc.sh 'circle-ci'
general:
  # Open the doc to the API
  artifacts:
    - "doc/_build/html"
    - "~/log.txt"
  # Restric the build to the branch master and development only
  branches:
    only:
       - development
       - master
       - circle-ci
